@using System
@using Sandbox;
@using Sandbox.UI;
@attribute [StyleSheet]
@inherits RootPanel
@namespace GameMenu
@implements Sandbox.Menu.IGameMenuPanel

<root class="mygamemenu">

    <div class="title">Jumpy</div>

    <div class="frog"></div>

    <img src="ui/frog.png" />

    <div class="options">

        @if ( Game.InGame )
        {
            <div class="row">
                <div class="option" onclick="@(() => Game.Menu.HideMenu() )">Continue</div>
            </div>

            <div class="row">
                <div class="option" onclick="@(() => Game.Menu.LeaveServer( "End Game" ) )">Disconnect</div>
            </div>
        }
        else
        {
            <div class="row">
                <div class="option" onclick="@CreateNewGame">Start Game</div>
            </div>
        }

        <div class="row">
            <div class="option" onclick="@Game.Menu.Close">Quit</div>
        </div>  
    </div>
</root>

@code
{
    public override void Tick()
    {
        base.Tick();

        SetClass("ingame", Game.InGame);
    }

    void CreateNewGame()
    {
        var options = new Sandbox.Modals.GameCreateModalOptions();
        options.Cookie = $"jumpy.serverconfig";
        options.ModalTitle = "Start Jumpin";
        options.MinPlayers = 1;
        options.MaxPlayers = 16;
        options.MapSelection = false;
        options.Default.GameTitle = $"{Game.UserName}'s Jumpy Game";

        options.OnStartGame = (setup) =>
        {
            Game.Menu.StartServerAsync( setup.MaxPlayers, setup.GameTitle, "<empty>" );
        };
        Game.Overlay.ShowCreateGame(options);
    }
}
